# .cursorules

[instructions]
This is a peer-to-peer (P2P) video chat application using WebRTC.

The frontend is built with Next.js and TypeScript, primarily located in the `src/app` directory. Key areas include:
- UI Components: Standard React components under `src/app` (e.g., `page.tsx`).
- Custom Hooks (`src/app/hooks`): 
  - `useWebRTC.ts`: Manages WebRTC peer connections, leveraging the `simple-peer` library for simplifying the WebRTC API.
  - `useWebSocket.ts`: Handles the persistent WebSocket connection to the signaling server.
- State Management: Primarily uses React's built-in state (`useState`, `useRef`) and context management via hooks.
- Important Note: Pay close attention to React hook dependencies (`useCallback`, `useEffect`) as the interaction between `useWebRTC` and `useWebSocket` is sensitive to callback stability.

The backend provides signaling capabilities to facilitate the P2P connections. 
- Signaling Server: Located in `server/server.js` (Node.js). Its role is *only* to exchange connection metadata (e.g., `join`, `existing_room`, `user_joined`, `user_left`, `signal` containing SDP offers/answers and ICE candidates) between peers via WebSockets. It does *not* relay media streams.

When providing code examples or modifications, adhere to TypeScript best practices for the frontend (`src/`) and JavaScript (ES6+) for the backend (`server/`). Ensure code aligns with the P2P architecture and React hook best practices.

[ignore]
# Version Control
.git/

# Dependencies
node_modules/

# Build outputs & Cache
.next/
out/
build/
dist/
.swc/
.vercel/

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment variables
.env*
!.env.example

# OS generated files
.DS_Store

# IDE/Editor config
.vscode/
.idea/
.cursor/

# Secrets/Keys
*.pem

# Generated server config (if applicable)
server/server-port.json

# NOTE: package-lock.json and yarn.lock are intentionally NOT ignored
# to ensure visibility into exact dependencies for reproducibility.
# NOTE: Test files (*.test.js, *.spec.ts, __tests__/, etc.) are also NOT ignored by default.
